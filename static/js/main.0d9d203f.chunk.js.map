{"version":3,"sources":["components/GatheringHeader.tsx","components/GridComponent.tsx","pages/HomePage.tsx","api/ingredients.ts","theme/theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GatheringHeader","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","mr","Menu","Typography","variant","component","GridComponent","columns","rows","style","height","width","display","hideFooter","COLUMNS_DEFINITION","field","hide","filterable","headerName","refinedRows","id","type","name","location","map","row","locations","join","HomePage","useState","filterName","setFilterName","filterRegion","setFilterRegion","Paper","marginTop","m","noValidate","autoComplete","TextField","value","onChange","event","target","label","result","length","filter","el","toLowerCase","includes","rowFiltering","mdTheme","createTheme","palette","primary","main","secondary","App","CssBaseline","className","ThemeProvider","theme","Container","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d9d203f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { Menu } from '@mui/icons-material';\r\n\r\nexport const GatheringHeader = () => {\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        sx={{ mr: 2 }}\r\n                    >\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                        New World Gathering\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\r\n\r\ntype GridComponentProps = {\r\n    columns: GridColDef[],\r\n    rows: any,\r\n};\r\n\r\nexport const GridComponent: React.FC<GridComponentProps> = ({ columns, rows }) => {\r\n    return (\r\n        <div style={{ height: 800, width: '100%' }}>\r\n            <div style={{ display: 'flex', height: '100%' }}>\r\n                <div style={{ flexGrow: 1 }}>\r\n                    <DataGrid\r\n                        columns={ columns }\r\n                        rows={ rows }\r\n                        hideFooter\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport { GridComponent } from '../components';\r\nimport { GridColDef } from '@mui/x-data-grid';\r\nimport { INGREDIENTS } from '../api';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst COLUMNS_DEFINITION: GridColDef[] = [\r\n    {field: 'id', hide: true, filterable: false},\r\n    {field: 'type', headerName: 'Type', width: 200, filterable: false},\r\n    {field: 'name', headerName: 'Ingredient Name', width: 200, filterable: false},\r\n    {field: 'locations', headerName: 'Regions', width: 600, filterable: false},\r\n];\r\n\r\nconst refinedRows = INGREDIENTS.map((row) => ({\r\n    id: row.id,\r\n    type: row.type,\r\n    name: row.name,\r\n    locations: row.location.join(', '),\r\n}));\r\n\r\nexport const HomePage: React.FC = () => {\r\n    const [filterName, setFilterName] = useState('');\r\n    const [filterRegion, setFilterRegion] = useState('');\r\n\r\n\r\n    const rowFiltering = () => {\r\n        let result = [...refinedRows];\r\n        if (filterName.length > 2) {\r\n            result = result.filter((el) => el.name.toLowerCase().includes(filterName.toLowerCase()));\r\n        }\r\n\r\n        if (filterRegion.length > 2) {\r\n            result = result.filter((el) => el.locations.toLowerCase().includes(filterRegion.toLowerCase()));\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    const handleRegionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setFilterRegion(value);\r\n    };\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setFilterName(value);\r\n    };\r\n\r\n    return (<Paper style={{ marginTop: '90px' }}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& > :not(style)': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <TextField id=\"filterByName\" value={ filterName } onChange={handleNameChange} label=\"Filter by name\" variant=\"outlined\" />\r\n                <TextField id=\"filterByRegion\" value={ filterRegion } onChange={handleRegionChange} label=\"Filter by region\" variant=\"outlined\" />\r\n            </Box>\r\n            <GridComponent columns={COLUMNS_DEFINITION} rows={ rowFiltering() }/>\r\n        </Paper>);\r\n};\r\n","import { Ingredient } from './types';\r\n\r\nexport const INGREDIENTS: Ingredient[] = [\r\n  {id: \"id-1\", type: \"Herbs\", name: \"Basil\", location: [\"Brightwood\", \"Brimstone Sands\", \"Everfall\"]},\r\n  {id: \"id-2\", type: \"Herbs\", name: \"Cinnamon\", location: [\"Cutlass Keys\", \"Edengrove\", \"First Light\"]},\r\n  {id: \"id-3\", type: \"Herbs\", name: \"Dill\", location: [\"Edengrove\", \"First Light\", \"Mourningdale\"]},\r\n  {id: \"id-4\", type: \"Herbs\", name: \"Garlic\", location: [\"Brimstone Sands\", \"Everfall\", \"Great Cleave\"]},\r\n  {id: \"id-5\", type: \"Herbs\", name: \"Ginger\", location: [\"Ebonscale Reach\", \"Reekwater\", \"Windsward\"]},\r\n  {id: \"id-6\", type: \"Herbs\", name: \"Mint\", location: [\"Restless Shore\", \"Weaver's Fen\", \"Windsward\"]},\r\n  {id: \"id-7\", type: \"Herbs\", name: \"Nutmeg\", location: [\"First Light\", \"Great Cleave\", \"Weaver's Fen\"]},\r\n  {id: \"id-8\", type: \"Herbs\", name: \"Oregano\", location: [\"Monarch's Bluff\", \"Restless Shore\", \"Shattered Mountain\"]},\r\n  {id: \"id-9\", type: \"Herbs\", name: \"Paprika\", location: [\"Brightwood\",\"Monarch's Bluff\", \"Shattered Mountain\"]},\r\n  {id: \"id-10\", type: \"Herbs\", name: \"Parsley\", location: [\"Cutlass Keys\", \"Edengrove\", \"Mourningdale\"]},\r\n  {id: \"id-11\", type: \"Herbs\", name: \"Peppercorn\", location: [\"Cutlass Keys\", \"Monarch's Bluff\", \"Mourningdale\"]},\r\n  {id: \"id-12\", type: \"Herbs\", name: \"Rosemary\", location: [\"Great Cleave\", \"Restless Shore\", \"Weaver's Fen\"]},\r\n  {id: \"id-13\", type: \"Herbs\", name: \"Saffron\", location: [\"Brightwood\", \"First Light\", \"Mourningdale\"]},\r\n  {id: \"id-14\", type: \"Herbs\", name: \"Sage\", location: [\"Brightwood\", \"Everfall\", \"Reekwater\"]},\r\n  {id: \"id-15\", type: \"Herbs\", name: \"Tarragon\", location: [\"Brightwood\", \"Brimstone Sands\", \"Reekwater\"]},\r\n  {id: \"id-16\", type: \"Herbs\", name: \"Thyme\", location: [\"Ebonscale Reach\", \"Reekwater\", \"Windsward\"]},\r\n  {id: \"id-17\", type: \"Provision Crate\", name: \"Apple\", location: [\"Brightwood\", \"Brimstone Sands\", \"Reekwater\"]},\r\n  {id: \"id-18\", type: \"Provision Crate\", name: \"Cauliflower\", location: [\"Edengrove\", \"First Light\", \"Mourningdale\"]},\r\n  {id: \"id-19\", type: \"Provision Crate\", name: \"Coconut\", location: [\"Restless Shore\", \"Weaver's Fen\", \"Windsward\"]},\r\n  {id: \"id-20\", type: \"Provision Crate\", name: \"Lemon\", location: [\"Great Cleave\", \"Restless Shore\", \"Weaver's Fen\"]},\r\n  {id: \"id-21\", type: \"Provision Crate\", name: \"Melon\", location: [\"First Light\", \"Great Cleave\", \"Weaver's Fen\"]},\r\n  {id: \"id-22\", type: \"Provision Crate\", name: \"Onion\", location: [\"Cutlass Keys\", \"Edengrove\", \"First Light\"]},\r\n  {id: \"id-23\", type: \"Provision Crate\", name: \"Orange\", location: [\"Cutlass Keys\", \"Edengrove\", \"Mourningdale\"]},\r\n  {id: \"id-24\", type: \"Provision Crate\", name: \"Rice\", location: [\"Monarch's Bluff\", \"Restless Shore\", \"Shattered Mountain\"]},\r\n  {id: \"id-25\", type: \"Provision Crate\", name: \"Salt\", location: [\"Brightwood\", \"Brimstone Sands\", \"Everfall\"]},\r\n  {id: \"id-26\", type: \"Provision Crate\", name: \"String Bean\", location: [\"Ebonscale Reach\", \"Everfall\", \"Reekwater\"]},\r\n  {id: \"id-27\", type: \"Provision Crate\", name: \"Sugar\", location: [\"Ebonscale Reach\", \"Reekwater\", \"Windsward\"]},\r\n  {id: \"id-28\", type: \"Provision Crate\", name: \"Tomato\", location: [\"Cutlass Keys\", \"Monarch's Bluff\", \"Mourningdale\"]},\r\n  {id: \"id-29\", type: \"Provision Crate\", name: \"Yeast\", location: [\"Brightwood\", \"Monarch's Bluff\", \"Shattered Mountain\"]}\r\n];\r\n","import { ThemeOptions } from '@mui/material';\r\nimport { createTheme } from '@mui/material/styles';\r\nexport const themeOptions: ThemeOptions = {\r\n    palette: {\r\n        primary: {\r\n            main: '#3f51b5',\r\n        },\r\n        secondary: {\r\n            main: '#f50057',\r\n        },\r\n    },\r\n};\r\n\r\nexport const mdTheme = createTheme(themeOptions);\r\n","import React from 'react';\nimport { HomePage } from './pages/HomePage';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport { mdTheme } from './theme/theme';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { GatheringHeader } from './components';\nimport { CssBaseline } from '@mui/material';\nimport Container from '@mui/material/Container';\n\nfunction App() {\n  return (\n      <>\n          <CssBaseline/>\n          <div className=\"App\">\n              <ThemeProvider theme={mdTheme}>\n                  <GatheringHeader/>\n                  <Container>\n                      <Router>\n                          <Switch>\n                              <Route path={'/gathering'} exact>\n                                  <HomePage/>\n                              </Route>\n                          </Switch>\n                      </Router>\n                  </Container>\n              </ThemeProvider>\n          </div>\n      </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}